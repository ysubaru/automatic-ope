PLAY [vrouter deadflow workaround] ****************************************************************************************

TASK [Target_hostname validate] *******************************************************************************************
skipping: [target]

TASK [Execute deadflow command] *******************************************************************************************
ok: [target]

TASK [Check latest deadflow_log_file] *************************************************************************************
ok: [target -> {{ansible_ssh_host2 | default ('unavailable')}}]

TASK [Debug file exist retult] ********************************************************************************************
ok: [target] => {
    "file_result.stat.exists": true
}

TASK [Remove latest deadflow_log_file] ************************************************************************************
skipping: [target]

TASK [Create new deadflow_log_file] ***************************************************************************************
skipping: [target]

TASK [debug] **************************************************************************************************************
skipping: [target]

TASK [Create check_deadflow/ directory] ***********************************************************************************
skipping: [target]

TASK [Create new deadflow_log_file] ***************************************************************************************
skipping: [target]

TASK [debug] **************************************************************************************************************
skipping: [target]

TASK [Initialize lists] ***************************************************************************************************
ok: [target]

TASK [Get latest logfile data] ********************************************************************************************
ok: [target -> {{ansible_ssh_host2 | default ('unavailable')}}]

TASK [Get deadflow to evactied] *******************************************************************************************
ok: [target]

TASK [Get deadflow_index_list] ********************************************************************************************

TASK [Beforehand flow --get] **********************************************************************************************

TASK [Evicted deadflow] ***************************************************************************************************

TASK [After flow --get] ***************************************************************************************************

TASK [Store deadflow_info_list and delete_result_list] ********************************************************************
skipping: [target]

TASK [Remove latest deadflow_log_file] ************************************************************************************
ok: [target -> {{ansible_ssh_host2 | default ('unavailable')}}]

TASK [create new deadflow_log_file] ***************************************************************************************
ok: [target -> {{ansible_ssh_host2 | default ('unavailable')}}]

TASK [SNOW Save deadflow_info] ********************************************************************************************
skipping: [target]

TASK [SNOW Save delete_result_list] ***************************************************************************************
skipping: [target]

PLAY RECAP ****************************************************************************************************************
target                     : ok=8    changed=0    unreachable=0    failed=0   

(ansible_2.6.2) [snow00@lb5nv-aotl0001n vrouter_deadflow]$ date;workon ansible_2.6.2; ansible-playbook -i /opt/hoshi/automa
tic-operation-tools/ansible/inventory/inventory_default /opt/hoshi/automatic-operation-tools/ansible/run-playbook/maintenance/vrouter_deadflow/vrouter_deadflow_workaround.yml -e 'ansible_ssh_host1=10.32.129.8 ansible_ssh_user1=openstack ansible_ssh_pass1=Ncinci01 ansible_ssh_host2=10.33.180.22 ansible_ssh_user2=snow00 ansible_ssh_pass2=Sn0W1d@p0033!! ansible_become_user1=root ansible_become_pass1=Ncinci01 ansible_become_user2=snow00 ansible_become_pass2=Sn0W1d@p0033!! target_hostname=lb5ap-vscp0001n'
Thu Oct 13 07:10:49 UTC 2022
/home/snow00/.virtualenvs/ansible_2.6.2/lib/python2.7/site-packages/ansible/parsing/vault/__init__.py:44: CryptographyDeprecationWarning: Python 2 is no longer supported by the Python core team. Support for it is now deprecated in cryptography, and will be removed in the next release.
  from cryptography.exceptions import InvalidSignature

PLAY [vrouter deadflow workaround] ****************************************************************************************

TASK [Target_hostname validate] *******************************************************************************************
skipping: [target]

TASK [Execute deadflow command] *******************************************************************************************
fatal: [target]: FAILED! => {"changed": false, "cmd": "contrail-tools flow -l | grep -B 3 -e 'TCP:.*D,' | grep '<=>'", "delta": "0:00:04.339522", "end": "2022-10-13 07:10:55.353057", "msg": "non-zero return code", "rc": 1, "start": "2022-10-13 07:10:51.013535", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}
...ignoring

TASK [Check latest deadflow_log_file] *************************************************************************************
ok: [target -> {{ansible_ssh_host2 | default ('unavailable')}}]

TASK [Debug file exist retult] ********************************************************************************************
ok: [target] => {
    "file_result.stat.exists": true
}

TASK [Remove latest deadflow_log_file] ************************************************************************************
ok: [target -> {{ansible_ssh_host2 | default ('unavailable')}}]

TASK [Create new deadflow_log_file] ***************************************************************************************
ok: [target -> {{ansible_ssh_host2 | default ('unavailable')}}]

TASK [debug] **************************************************************************************************************
ok: [target -> {{ansible_ssh_host2 | default ('unavailable')}}] => {
    "msg": "##### SNOW Message: Deadflow does not exist. #####"
}

PLAY RECAP ****************************************************************************************************************
target                     : ok=6    changed=0    unreachable=0    failed=0
